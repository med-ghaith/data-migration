version: '3'
services:
  dbzui-zookeeper:
    container_name: dbzui-zookeeper
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - dbzui-network

  dbzui-kafka:
    container_name: dbzui-kafka
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - dbzui-zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: dbzui-zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://dbzui-kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
    networks:
      - dbzui-network

  dbzui-db-pg:
    container_name: dbzui-db-pg
    image: debezium/example-postgres:2.1.2.Final
    ports:
      - "65432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - dbzui-network

  dbzui-db-mysql:
    container_name: dbzui-db-mysql
    image: mysql:5
    ports:
      - "63306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysql
      - MYSQL_ROOT_PASSWORD=mysql
    networks:
      - dbzui-network

  dbzui-db-mongo:
    container_name: dbzui-db-mongo
    image: mongo:5.0
    command: ["mongod", "--replSet", "rs0"]
    ports:
      - "37017:27017"
    networks:
      - dbzui-network

  mongo-initializer:
    image: mongo:5.0
    networks:
      - dbzui-network
    depends_on:
      - dbzui-db-mongo
    volumes:
      - ./backend/src/test/resources/initialize-mongo-single.js:/docker-entrypoint-initdb.d/initialize-mongo-single.js
    command:
      - bash
      - -c
      - |
        sleep 20 && mongosh --host dbzui-db-mongo --port 27017 --eval "rs.initiate();" &&
        mongosh --host dbzui-db-mongo --port 27017 /docker-entrypoint-initdb.d/initialize-mongo-single.js

  dbzui-connect:
    container_name: dbzui-connect
    image: quay.io/debezium/connect:latest
    ports:
      - "8083:8083"
    depends_on:
      - dbzui-kafka
      - dbzui-db-pg
      - dbzui-db-mongo
      - dbzui-db-mysql
    environment:
      - BOOTSTRAP_SERVERS=dbzui-kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      - ENABLE_DEBEZIUM_KC_REST_EXTENSION=true
      - CONNECT_REST_EXTENSION_CLASSES=io.debezium.kcrestextension.DebeziumConnectRestExtension,io.debezium.connector.mysql.rest.DebeziumMySqlConnectRestExtension,io.debezium.connector.postgresql.rest.DebeziumPostgresConnectRestExtension,io.debezium.connector.mongodb.rest.DebeziumMongoDbConnectRestExtension,io.debezium.connector.oracle.rest.DebeziumOracleConnectRestExtension,io.debezium.connector.sqlserver.rest.DebeziumSqlServerConnectRestExtension
      - ENABLE_DEBEZIUM_SCRIPTING=true
      - CONNECT_ACCESS_CONTROL_ALLOW_ORIGIN=*
      - CONNECT_ACCESS_CONTROL_ALLOW_METHODS=GET,POST,PUT,DELETE
      - CONNECT_ACCESS_CONTROL_ALLOW_HEADERS=origin,content-type,accept,authorization
    networks:
      - dbzui-network

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:7.4.1
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      - dbzui-kafka
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=dbzui-kafka:9092
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
    networks:
      - dbzui-network

  schema-registry-ui:
    container_name: schema-registry-ui
    image: landoop/schema-registry-ui:latest
    ports:
      - "8000:8000"
    depends_on:
      - schema-registry
    environment:
      - SCHEMAREGISTRY_URL=http://schema-registry:8081
      - SCHEMAREGISTRY_UI_HOST=0.0.0.0
      - SCHEMAREGISTRY_UI_PORT=8000
    networks:
      - dbzui-network

networks:
  dbzui-network:
